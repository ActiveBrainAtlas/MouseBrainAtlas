This file contains the complete list of files in the repository.

Each file should have a designation:
K: Keep
O: Move to old

You can move a whole directory to old. "K"eep has to be specified for each file

After K/O there can be a name of a directory the file should be moved to. Otherwise 
if it is K it is kept where it is, if it is O it is moved to the old directory at the same level as the file.



├── README.md                           K
├── directory_tree.txt                  O
├── doc
│   ├── Analysis.md                     K
│   ├── Brain_stack_directories.md
│   ├── DeveloperGuide.md
│   ├── GuideForLaurenStacy.md
│   ├── README.MD
│   ├── RunningFiles.md
│   ├── TransferFiles.md
│   ├── User\ Manuals
│   │   ├── UserGuide.md
│   │   └── user_guide_pages
│   │       ├── BuildAtlas.md
│   │       ├── DataDescription.md
│   │       ├── Detection.md
│   │       ├── EnvironmentSetup.md
│   │       ├── FileOrganization.md
│   │       ├── GUIGuide.md
│   │       ├── Overview.md
│   │       ├── Preprocessing.md
│   │       ├── Registration.md
│   │       ├── Timing.md
│   │       ├── TrainClassifiers.md
│   │       └── Visualization.md
│   ├── dependancies.md
│   ├── environmentVariables.md
│   ├── gui_specs.txt
│   ├── old_readme.md
│   └── writeup
│       ├── AWS_instruction.md
│       ├── RescanListWithPosition.txt
│       ├── S3_file_organization.md
│       ├── annotation_notes.md
│       ├── bayesian.md
│       ├── bayesian.md.html
│       ├── example_criteria.txt
│       ├── outliers.txt
│       ├── transfer_data_to_aws.md
│       ├── uncertainty.md
│       ├── uncertainty.md.html
│       ├── zscore_hessian.md
│       └── zscore_hessian.md.html
├── old
│   ├── 3d
│   │   ├── README.md
│   │   ├── atlas_from_aligned_annotated_volumes_v4.ipynb
│   │   ├── atlas_from_aligned_annotated_volumes_v5.ipynb
│   │   ├── build_atlas_from_aligned_annotated_brains_v6.ipynb
│   │   ├── build_atlas_from_aligned_annotated_brains_v7_standard_orientation_notstartedyet.ipynb
│   │   ├── euclid.py
│   │   ├── icp_matching.py
│   │   ├── outerContour_poisson_reconstruct.mlx
│   │   ├── render_shell.ipynb
│   │   ├── render_shell_from_tissue_masks.ipynb
│   │   ├── spherical_harmonics.ipynb
│   │   ├── visualize_aligned_annotated_brains.ipynb
│   │   ├── visualize_allen.ipynb
│   │   ├── visualize_annotated_brains.ipynb
│   │   ├── visualize_atlas_2018.ipynb
│   │   ├── visualize_bingxing_data.ipynb
│   │   ├── visualize_confidence_v3.ipynb
│   │   ├── visualize_coregistration_atlas_space_v3.ipynb
│   │   ├── visualize_greylevel_volumes.ipynb
│   │   ├── visualize_hessian.ipynb
│   │   ├── visualize_lauren_data.ipynb
│   │   ├── visualize_scoreVolume_and_fuzzy_atlasVolume.ipynb
│   │   ├── visualize_scoreVolume_and_fuzzy_atlasVolume_v2.ipynb
│   │   └── visualize_subject_space_v3.ipynb
│   ├── CodeStructure.md
│   ├── adaboost_m2
│   │   └── Untitled.ipynb
│   ├── annotation
│   │   ├── apply_cerebellumMask_from_annotationFiles.ipynb
│   │   ├── check_annotation_file_v3.ipynb
│   │   ├── check_annotation_file_v3_for_thalamus.ipynb
│   │   ├── construct_annotationVolume_from_annotationFiles_v4.ipynb
│   │   ├── construct_shell_volume.ipynb
│   │   ├── convert_annotation_v3_to_using_original_uncropped_coordinates.ipynb
│   │   ├── dump_landmark_indices_to_files.py
│   │   ├── generate_annotation_from_alignment.ipynb
│   │   ├── generate_labelmap.ipynb
│   │   ├── generate_latest_annotation_list.ipynb
│   │   ├── generate_latest_annotation_list.py
│   │   ├── interpolate_contours.ipynb
│   │   ├── interpolate_contours_levelset.ipynb
│   │   ├── map_labeling_to_original.ipynb
│   │   ├── map_labelings_alignedCropped_to_original.ipynb
│   │   ├── map_labelings_original_to_alignedCropped.ipynb
│   │   ├── merge_labelings.ipynb
│   │   ├── parse_neurolucida_xml.py
│   │   ├── parse_neurolucida_xml_lauren.ipynb
│   │   ├── parse_neurolucida_xml_stacy.ipynb
│   │   ├── parse_xml_bingxing.ipynb
│   │   ├── remove_out_of_boundary_parts.ipynb
│   │   ├── untitled.txt
│   │   ├── upload_latest_annotations.py
│   │   ├── visualize_annotations_v2.ipynb
│   │   ├── visualize_annotations_v2.py
│   │   ├── visualize_annotations_v2_distributed.py
│   │   ├── visualize_annotations_v3.ipynb
│   │   ├── visualize_annotations_v3.py
│   │   ├── visualize_annotations_v3_distributed.ipynb
│   │   ├── visualize_annotations_v3_distributed.py
│   │   ├── visualize_annotations_v4.ipynb
│   │   └── visualize_annotations_v4.py
│   ├── annotation_pipeline.ipynb
│   ├── automatic_annotation_evaluation.csv
│   ├── aws
│   │   ├── README.md
│   │   ├── cfncluster_config_template
│   │   ├── cfncluster_post_install.sh
│   │   ├── cfncluster_post_install_gpu.sh
│   │   ├── cfncluster_post_install_gpu_nocfncluster.sh
│   │   ├── cfncluster_post_install_preprocess.sh
│   │   ├── cfncluster_post_install_xiang.sh
│   │   ├── edited-cfncluster.cfn.json
│   │   ├── install_cellprofiler.sh
│   │   ├── install_dependencies.sh
│   │   ├── lifecycle.json
│   │   └── setup_jupyter_notebook.sh
│   ├── cells
│   │   ├── LoG.ipynb
│   │   ├── LoG_public.ipynb
│   │   ├── README.md
│   │   ├── TODO.md
│   │   ├── align_pad_mirror_cells_v2.ipynb
│   │   ├── cell_detection_cellProfiler.ipynb
│   │   ├── cell_detection_exampleImage.ipynb
│   │   ├── cell_detection_public.ipynb
│   │   ├── cell_pipeline.ipynb
│   │   ├── cell_utilities.py
│   │   ├── compare_with_third_parties.ipynb
│   │   ├── compute_cell_neighborhood_relationship.ipynb
│   │   ├── compute_cells_hu_moment.ipynb
│   │   ├── compute_cells_hu_moment.py
│   │   ├── compute_features.ipynb
│   │   ├── compute_features_v2.ipynb
│   │   ├── d3js_visualization
│   │   │   ├── index.html
│   │   │   ├── index.html~HEAD
│   │   │   ├── scatter.css
│   │   │   └── scatter.js
│   │   ├── derive_blob_information.ipynb
│   │   ├── derive_blob_information.py
│   │   ├── detect_cells_alternatives.ipynb
│   │   ├── detect_cells_cellprofiler.py
│   │   ├── detect_cells_cellprofiler_v2.py
│   │   ├── detect_cells_farsight.py
│   │   ├── detect_cells_regional_otsu.ipynb
│   │   ├── draw_cell_contours_on_images.ipynb
│   │   ├── evaluate_blob_detection.ipynb
│   │   ├── fractal_dimension.ipynb
│   │   ├── generate_d3js_data.ipynb
│   │   ├── generate_dataset_cell_based.ipynb
│   │   ├── leaves.ipynb
│   │   ├── levelset.ipynb
│   │   ├── pyclust_test.ipynb
│   │   ├── reconstruct_images.ipynb
│   │   ├── run_third_party_tools.py
│   │   ├── run_third_party_tools_local.ipynb
│   │   ├── run_third_party_tools_wholestack.ipynb
│   │   ├── run_third_party_tools_wholestack_gordon.ipynb
│   │   ├── run_third_party_tools_wholestack_gordon_parallel.ipynb
│   │   ├── spectral_clustering.ipynb
│   │   ├── spectral_embedding_size_normalized_v2.ipynb
│   │   ├── test_cell_based_classifiers.ipynb
│   │   ├── train_cell_based_classifiers.ipynb
│   │   ├── tutorial.ipynb
│   │   ├── visualize_detected_cells.ipynb
│   │   └── visualize_features.ipynb
│   ├── create_sql_database.ipynb
│   ├── dictionary
│   │   ├── ICA.ipynb
│   │   ├── ICA_experiments.ipynb
│   │   ├── ICA_experiments_demo.ipynb
│   │   ├── ICA_experiments_utility.ipynb
│   │   ├── dictionary_learning_sklearn_public.ipynb
│   │   └── dictionary_method.ipynb
│   ├── functions_for_stacy.ipynb
│   ├── intensity
│   │   ├── elastix_registration_3d.ipynb
│   │   ├── gray_vs_texture.ipynb
│   │   ├── mhd_utils_3d.py
│   │   ├── train_intensity_classifier.ipynb
│   │   └── use_allen_atlas.ipynb
│   ├── mhd_utils_3d.py
│   ├── move_s3_files.ipynb
│   ├── new_region
│   │   ├── compare_texture_with_greyvalue.ipynb
│   │   └── propose_new_regions.ipynb
│   ├── pipeline_aws.ipynb
│   ├── preprocess_pipeline_aws.ipynb
│   ├── preprocess_pipeline_aws_thalamus.ipynb
│   ├── reconstruct
│   │   ├── README.md
│   │   ├── compute_score_volume_gradient_v1.ipynb
│   │   ├── compute_score_volume_gradient_v2.ipynb
│   │   ├── compute_score_volume_gradients_v5.py
│   │   ├── construct_contour_volume.ipynb
│   │   ├── construct_contour_volume_v2.ipynb
│   │   ├── construct_intensity_volume.py
│   │   ├── construct_intensity_volume_v3.ipynb
│   │   ├── construct_score_volume_v4.ipynb
│   │   ├── construct_score_volume_v5.ipynb
│   │   ├── construct_score_volume_v5.py
│   │   ├── construct_score_volume_v6.ipynb
│   │   ├── construct_score_volume_v7_roi.ipynb
│   │   ├── construct_thumbnail_volume_v3_raw_resolution.ipynb
│   │   ├── rectify.ipynb
│   │   ├── resection_thumbnail_volume.ipynb
│   │   └── test_conversion_between_section_z.ipynb
│   ├── snake
│   │   ├── cameraman.gif
│   │   ├── deformable_template_prototype.ipynb
│   │   ├── deformable_template_snake.ipynb
│   │   ├── deformable_template_snap.ipynb
│   │   ├── local_transform_fit_image.ipynb
│   │   ├── local_transform_fit_image_snake_instack.ipynb
│   │   ├── local_transform_fit_image_snake_parallel.ipynb
│   │   ├── local_transform_fit_image_snake_projection.ipynb
│   │   ├── snake_bresson.ipynb
│   │   ├── snake_localization.py
│   │   ├── snake_localization_distributed.py
│   │   └── snake_localization_distributed_allStacks.sh
│   ├── spm
│   │   ├── SIFT_SPM_adaboost.ipynb
│   │   ├── SIFT_SPM_features.ipynb
│   │   ├── SIFT_SPM_features_training.ipynb
│   │   ├── SIFT_SPM_v2.ipynb
│   │   ├── compute_sift_labelmap.py
│   │   ├── compute_sift_labelmap_distributed.py
│   │   └── sift_spm_utilities.py
│   ├── visualization
│   │   ├── juxtapose_visualizations.ipynb
│   │   └── visualization.ipynb
│   └── web_services
│       ├── server.py
│       ├── server_v2.py
│       └── web_service.py
└── src
    ├── anotation
    ├── gui
    │   ├── DataFeeder.py                                                                       K
    │   ├── README(old).md
    │   ├── README.md
    │   ├── TODO.md
    │   ├── brain_labeling_gui_v27.py
    │   ├── brain_labeling_gui_v28.py                                                           K
    │   ├── gui_utilities.py
    │   ├── mask_editing_tool.py
    │   ├── mask_editing_tool_v2.py
    │   ├── mask_editing_tool_v3.py
    │   ├── mask_editing_tool_v4.py
    │   ├── mask_editing_utilities.py
    │   ├── newStructureNames.txt
    │   ├── preprocess_tool_v2.py
    │   ├── preprocess_tool_v3.py
    │   ├── rectification_tool.py
    │   ├── structure_names.txt
    │   ├── structure_tree.json                                                                 K
    │   ├── structure_tree.txt
    │   ├── structure_tree_txt_to_json.ipynb
    │   ├── ui
    │   │   ├── AlignmentGui.ui
    │   │   ├── BrainLabelingGui_v15.ui
    │   │   ├── GalleryDialog.ui
    │   │   ├── MaskEditingGui4.ui
    │   │   ├── MaskEditingGui5.ui
    │   │   ├── MaskParametersGui.ui
    │   │   ├── PreprocessTool.ui
    │   │   ├── PreprocessTool_v2.ui
    │   │   ├── RectificationTool.ui
    │   │   ├── __init__.py
    │   │   ├── accept_new_landmark_dialog.py
    │   │   ├── accept_new_landmark_dialog.ui
    │   │   ├── ui_AlignmentGui.py
    │   │   ├── ui_BrainLabelingGui_v15.py
    │   │   ├── ui_GalleryDialog.py
    │   │   ├── ui_MaskEditingGui.py
    │   │   ├── ui_MaskEditingGui4.py
    │   │   ├── ui_MaskEditingGui5.py
    │   │   ├── ui_MaskEditingGui5.ui.py
    │   │   ├── ui_MaskParametersGui.py
    │   │   ├── ui_PreprocessGui.py
    │   │   ├── ui_PreprocessGui_v2.py
    │   │   └── ui_RectificationTool.py
    │   ├── ui_BrainLabelingGui_v15.py
    │   ├── ui_MaskEditingGui5.py
    │   ├── ui_PreprocessGui.py
    │   └── widgets
    │       ├── DrawableZoomableBrowsableGraphicsScene.py
    │       ├── DrawableZoomableBrowsableGraphicsScene_ForLabeling.py
    │       ├── DrawableZoomableBrowsableGraphicsScene_ForLabeling_v2.py
    │       ├── DrawableZoomableBrowsableGraphicsScene_ForMasking.py
    │       ├── DrawableZoomableBrowsableGraphicsScene_ForSnake.py
    │       ├── MultiplePixmapsGraphicsScene.py
    │       ├── SignalEmittingGraphicsPathItem.py
    │       ├── SignalEmittingGraphicsPathItemWithVertexCircles.py
    │       ├── SignalEmittingItems.py
    │       ├── ZoomableBrowsableGraphicsScene.py
    │       ├── ZoomableBrowsableGraphicsSceneWithReadonlyPolygon.py
    │       ├── __init__.py
    │       └── custom_widgets.py
    ├── learning
    │   ├── README.md
    │   ├── TODO.md
    │   ├── Untitled.ipynb
    │   ├── analyze_scores_finetuned_cnn_v3.ipynb
    │   ├── apply_classifiers_v3.ipynb
    │   ├── apply_classifiers_v3.py
    │   ├── apply_classifiers_v4.py
    │   ├── apply_classifiers_v5.py                                                             K
    │   ├── check_total_response.ipynb
    │   ├── classifier_settings.csv                                                             K
    │   ├── compute_features.py                                                                 K
    │   ├── compute_features_for_entire_stacks.ipynb
    │   ├── dataset_settings.csv                                                                K
    │   ├── detector_settings.backup.csv
    │   ├── detector_settings.csv                                                               K
    │   ├── experiment_classifier_response_to_exposure_correction.ipynb
    │   ├── experiment_classifier_response_to_exposure_correction_no_writeout.ipynb
    │   ├── experiment_classifier_response_to_exposure_correction_with_writeout.ipynb
    │   ├── explore_normalization_effect_on_classifier.ipynb
    │   ├── explore_normalization_effect_on_classifier_with_retrain.ipynb
    │   ├── explore_normalization_effect_on_classifier_with_retrain_v2.ipynb
    │   ├── explore_normalization_effect_on_classifier_with_retrain_v2_convenience.ipynb
    │   ├── export_train_and_test_patches.ipynb
    │   ├── extract_test_features_cnn_corrected.ipynb
    │   ├── finetune_cnn_v3.ipynb
    │   ├── finetune_dnn.ipynb
    │   ├── from_image_to_score_volumes.py                                                      K
    │   ├── from_image_to_scoremap.ipynb
    │   ├── from_images_to_score_volume.ipynb
    │   ├── gabor.ipynb
    │   ├── generate_dataset.ipynb
    │   ├── identify_patch_class_based_on_labeling.ipynb
    │   ├── identify_patch_class_based_on_labeling_v2.ipynb
    │   ├── inception-bn-blue
    │   ├── inception-bn-blue.pdf
    │   ├── interpolate_scoremaps_v3.ipynb
    │   ├── interpolate_scoremaps_v3.py
    │   ├── make_cnn_models.ipynb
    │   ├── resample_scoremaps_v3.py
    │   ├── resample_scoremaps_v4.py
    │   ├── resample_scoremaps_v5.py
    │   ├── sync_features_to_gordon.ipynb
    │   ├── synset.txt
    │   ├── tensorflow_example.ipynb
    │   ├── test_classifier_performance_v3.ipynb
    │   ├── top-down.ipynb
    │   ├── train_and_test_classifier_performance_v4.ipynb
    │   ├── train_and_test_classifier_performance_v4_UCSD_brains.ipynb
    │   ├── train_classifier_v3.5.ipynb
    │   ├── train_classifier_v3.ipynb
    │   ├── train_classifier_v4.ipynb
    │   ├── vgg16-blue
    │   ├── vgg16-blue.pdf
    │   ├── view_classification_metrics.ipynb
    │   ├── visualize_scoremaps_v3.ipynb
    │   ├── visualize_scoremaps_v3.py
    │   ├── visualize_scoremaps_v4.py
    │   └── visualize_scoremaps_v5.py
    ├── preprocess
    │   ├── README.md
    │   ├── align_consecutive.py
    │   ├── align_consecutive_v2.py
    │   ├── brightness_correction.ipynb
    │   ├── check_preprocess_info.ipynb
    │   ├── compare_intensity_registration_vs_score_registration.ipynb
    │   ├── compose_transform_thumbnail.py
    │   ├── compose_transform_thumbnail_v2.py
    │   ├── compress_and_rescale.py
    │   ├── compress_as_jpeg.py
    │   ├── contrast_stretch_fluorescent_image.py
    │   ├── contrast_stretch_fluorescent_images.ipynb
    │   ├── convert_grayscale_neurotrace.py
    │   ├── convert_grayscale_neurotrace_v2.py
    │   ├── create_movie_for_stack.ipynb
    │   ├── czi_to_tiff.ipynb
    │   ├── czifile.py
    │   ├── czifile.pyx
    │   ├── detect_labeled_neurons.ipynb
    │   ├── detect_lossless_mask.ipynb
    │   ├── expand_jp2.py
    │   ├── explore_fluorescent_image_characteristics.ipynb
    │   ├── fix_data_problem.ipynb
    │   ├── generate_mask_v2.ipynb
    │   ├── generate_masks_v2_distributed.ipynb
    │   ├── generate_neurotrace_intensity_normalization_figures.ipynb
    │   ├── generate_other_versions_v2.py
    │   ├── generate_scoremap_viz_grid.ipynb
    │   ├── generate_thumbnail_mask_contour_viz.py
    │   ├── generate_thumbnail_mask_contour_viz_distributed.py
    │   ├── generate_thumbnail_masks_distributed.py
    │   ├── generate_thumbnail_masks_v4.py
    │   ├── generate_thumbnail_masks_v5.py
    │   ├── inspect_areas_around_landmarks.ipynb
    │   ├── intensity_correction.py
    │   ├── learn_to_identify_wrong_masks.ipynb
    │   ├── match_intensity_profile.py
    │   ├── match_intensity_profile_v2.py
    │   ├── match_ucsd_to_cshl_histograms.ipynb
    │   ├── morphsnakes.py
    │   ├── neurotrace_blue_to_nissl.py
    │   ├── number_filelist_consecutively.ipynb
    │   ├── number_filelist_consecutively.py
    │   ├── parameters                                                  
    │   │   ├── Parameters_Affine.txt
    │   │   ├── Parameters_Affine_3d.txt
    │   │   ├── Parameters_Affine_3d_mi.txt
    │   │   ├── Parameters_BSpline.txt
    │   │   ├── Parameters_BSpline_3d.txt
    │   │   ├── Parameters_BSpline_3d_mi.txt
    │   │   ├── Parameters_BSpline_3d_mi_wider_spacing.txt
    │   │   ├── Parameters_Rigid.txt                            
    │   │   ├── Parameters_Rigid_3d.txt
    │   │   ├── Parameters_Rigid_3d_mi.txt
    │   │   ├── Parameters_Rigid_MutualInfo.txt                                                 K
    │   │   ├── Parameters_Rigid_MutualInfo_4000Iters.txt
    │   │   ├── Parameters_Rigid_MutualInfo_noNumberOfSpatialSamples.txt
    │   │   ├── Parameters_Rigid_MutualInfo_noNumberOfSpatialSamples_4000Iters.txt
    │   │   ├── Parameters_Rigid_RequiredRatioOfValidSamples.txt
    │   │   ├── Parameters_Rigid_erodeMask.txt
    │   │   ├── Parameters_Rigid_noNumberOfSpatialSamples.txt
    │   │   ├── Parameters_Translation.txt
    │   │   └── Parameters_Translation_3d.txt
    │   ├── plot_fluorescent_intensity_mappings.ipynb
    │   ├── plot_image_histograms.ipynb
    │   ├── preprocess_bingxing_data.ipynb
    │   ├── preprocess_cshl_data_v2.ipynb                                                       K
    │   ├── preprocess_cshl_data_v2_neurotrace.ipynb                                            K
    │   ├── preprocess_settings.csv
    │   ├── preprocess_ucsd_data.ipynb
    │   ├── preprocess_ucsd_data_v2.ipynb                                                       K
    │   ├── rename.py
    │   ├── rescale_image.py
    │   ├── sftp-config.json
    │   ├── stereotectic_coordinates.ipynb
    │   ├── stereotectic_coordinates_lossless.ipynb
    │   ├── stretch_contrast_image.py
    │   ├── transfer_s3.ipynb
    │   ├── unmix_many_tifs_autofile.m
    │   ├── unmix_tif_GB_separate_input_channels.m
    │   ├── warp_crop_IM_v2.py
    │   └── warp_crop_IM_v3.py                                                                  K
    ├── registration
    │   ├── README.md
    │   ├── align_annotated_brains_v5.ipynb
    │   ├── align_annotated_brains_v6.ipynb
    │   ├── align_subject_brain_to_annotated_volume_v2.ipynb
    │   ├── align_subject_brain_to_atlas_v2.py
    │   ├── align_subject_brain_to_atlas_v4.py
    │   ├── align_subject_brain_to_subject_brain_v2.ipynb
    │   ├── analyze_global_alignment_over_brains.ipynb
    │   ├── analyze_human_correction.ipynb
    │   ├── analyze_score_evolution.ipynb
    │   ├── analyze_score_significance_synthetic_example.ipynb
    │   ├── analyze_structurewise_alignment_over_brains_v3.ipynb
    │   ├── compute_hessian.ipynb
    │   ├── compute_individual_alignment_hessian.ipynb
    │   ├── cubic_bspline_registration_synthetic_example.ipynb
    │   ├── deformable_registration_cubic_bspline.ipynb
    │   ├── erase_cerebellum.ipynb
    │   ├── evaluate_registration_jaccard.ipynb
    │   ├── evaluate_registration_metrics_v2_compute_deviation_vs_ChAT.ipynb
    │   ├── evaluate_registration_metrics_v2_compute_deviation_vs_expert.ipynb
    │   ├── example_fixed_brain_spec.json
    │   ├── example_moving_brain_spec.json
    │   ├── fit_atlas_structure_to_subject_v2.py
    │   ├── fit_contour_to_scoreVolume_inSection.ipynb
    │   ├── fit_contour_to_scoremap.py
    │   ├── fit_contour_to_scoremap_graphcut.ipynb
    │   ├── gaussian_smooth_volume.ipynb
    │   ├── global_registration_v3.ipynb
    │   ├── global_registration_v3.py
    │   ├── global_registration_v4.ipynb
    │   ├── global_registration_v4.py
    │   ├── hessian_v2_global.ipynb
    │   ├── hessian_v2_local.ipynb
    │   ├── lie_group_experiment.ipynb
    │   ├── local_registration_v3.ipynb
    │   ├── local_registration_v3.py
    │   ├── local_registration_v4.ipynb
    │   ├── local_registration_v4.py
    │   ├── measure_confidence_v3.ipynb
    │   ├── measure_confidence_v3_global.py
    │   ├── measure_confidence_v3_local.py
    │   ├── measure_confidence_v4.ipynb
    │   ├── multiprocess_experiment.ipynb
    │   ├── multiprocess_utilities.py
    │   ├── quarternion.py
    │   ├── register_brains.py                                                                  K
    │   ├── register_lauren_data.ipynb
    │   ├── register_lauren_data_v2.ipynb
    │   ├── register_stacy_data.ipynb
    │   ├── registration_settings.backup.csv
    │   ├── registration_settings.csv
    │   ├── registration_v5.ipynb
    │   ├── registration_v6.ipynb
    │   ├── registration_v7_atlasV6.ipynb
    │   ├── registration_v7_atlasV6_local_allstructures.ipynb
    │   ├── registration_v7_atlasV6_local_allstructures_generate_figures.ipynb
    │   ├── registration_v7_atlasV6_simpleGlobal.ipynb
    │   ├── registration_v7_atlasV6_textureBasedGlobal.ipynb
    │   ├── thin_plate_spline_registration_synthetic_example.ipynb
    │   ├── transform_brains_v3.ipynb
    │   ├── transform_brains_v3.py
    │   ├── transform_brains_v3_global.py
    │   ├── transform_brains_v3_local.py
    │   ├── transform_brains_v3_reverse_global.py
    │   ├── transform_brains_v4.ipynb
    │   ├── transform_brains_v4.py                                                              K
    │   ├── update_atlas.ipynb
    │   ├── visualize_registration.py
    │   ├── visualize_registration_v3.ipynb
    │   ├── visualize_registration_v3.py
    │   ├── visualize_registration_v4.ipynb
    │   ├── visualize_registration_v4.py
    │   ├── visualize_registration_v5.ipynb
    │   ├── visualize_registration_v5.py                                                        K
    │   └── warp_intensity_volumes.ipynb
    └── utilities
        ├── 100colors.txt
        ├── __init__.py
        ├── aligner.py
        ├── aligner_v2.py
        ├── aligner_v3.py
        ├── annotation_utilities.py
        ├── bipartite_matching.py
        ├── clustering.py
        ├── colormap.json
        ├── conversion.ipynb
        ├── conversion.py
        ├── data_manager.py
        ├── distributed_utilities.py
        ├── high_contrast_colors.txt
        ├── learning_utilities.py
        ├── lie.py
        ├── metadata.py
        ├── neighbors.py
        ├── preprocess_utilities.py
        ├── qt_utilities.py
        ├── randomcolor.py
        ├── registration_utilities.py
        ├── sequential_dispatcher.py
        ├── shape_matching.py
        ├── slic_texture.py
        ├── utilities2015.py
        ├── vis3d_utilities.py
        └── visualization_utilities.py

29 directories, 522 files
